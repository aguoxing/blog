2020-04-21 09:47:46.745 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 09:48:20.428 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 09:48:20.445 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e61f5a1, org.apache.catalina.connector.ResponseFacade@524300e2](String), 1(Integer), GET(String), 856(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 09:48:20.469 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 09:51:53.595 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 09:51:53.598 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c01007, org.apache.catalina.connector.ResponseFacade@524300e2](String), 1(Integer), GET(String), 15(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 09:51:53.603 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 09:51:56.485 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 09:51:56.486 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e7423d2, org.apache.catalina.connector.ResponseFacade@524300e2](String), 1(Integer), GET(String), 11(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 09:51:56.489 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 09:51:57.794 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 09:51:57.798 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@503d8bc1, org.apache.catalina.connector.ResponseFacade@524300e2](String), 1(Integer), GET(String), 13(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 09:51:57.801 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 09:53:25.256 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:13:30.595 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:14:43.273 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:16:50.210 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:16:55.190 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 11:16:55.190 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 11:16:55.190 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 11:20:55.789 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:20:55.803 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: (String)
2020-04-21 11:20:55.826 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 0
2020-04-21 11:22:35.041 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:22:39.158 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 11:22:39.158 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 11:22:39.159 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 11:22:46.067 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:22:46.080 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@42da50d3, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1fc30e3d](String), 1(Integer), GET(String), 725(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:22:46.086 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:22:57.491 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:22:57.492 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: (String)
2020-04-21 11:22:57.503 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 0
2020-04-21 11:25:23.059 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:25:23.060 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: (String)
2020-04-21 11:25:23.061 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 0
2020-04-21 11:26:25.571 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:26:25.574 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4929ae18, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@47ee594d](String), 1(Integer), GET(String), 15(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:26:25.580 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:26:38.677 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:26:38.678 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:26:38.680 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:27:33.197 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:27:33.198 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@65b45215, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@6b73b0d3](String), 1(Integer), GET(String), 12(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:27:33.209 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:27:44.241 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:27:44.242 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:27:44.245 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:29:13.389 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:29:18.154 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 11:29:18.155 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 11:29:18.156 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 11:30:05.363 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:30:05.378 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5b079415, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@5684e719](String), 1(Integer), GET(String), 573(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:30:05.386 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:30:18.034 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:30:18.035 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:30:18.045 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:31:15.335 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:31:15.336 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:31:15.343 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:32:46.958 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:32:46.959 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:32:46.960 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:32:54.399 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:32:54.400 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@216a1bee, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@2fadf1b3](String), 1(Integer), GET(String), 15(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:32:54.403 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:33:05.410 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:33:05.411 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:33:05.412 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:36:05.591 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:36:05.593 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2070fb27, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@bd458e9](String), 1(Integer), GET(String), 13(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:36:05.596 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:36:07.016 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:36:07.019 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@43e72e08, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@4d20d804](String), 1(Integer), GET(String), 15(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:36:07.030 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:37:37.149 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:37:37.150 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@199f9040, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@42168caa](String), 1(Integer), GET(String), 11(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:37:37.154 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:38:09.659 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:38:09.660 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:38:09.661 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:38:25.532 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:38:25.533 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:38:25.534 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:38:36.900 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:38:36.903 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:38:36.906 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:44:13.587 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 11:44:18.420 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 11:44:18.421 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 11:44:18.421 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 11:44:25.265 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:44:25.280 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d286fae, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@70fc1caf](String), 1(Integer), GET(String), 587(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:44:25.286 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:44:36.070 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 11:44:36.071 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 11:44:36.081 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 11:48:44.506 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:48:44.507 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@d9554cc, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@23886476](String), 1(Integer), GET(String), 13(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:48:44.511 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 11:48:47.683 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 11:48:47.684 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@76cdbc4, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@9ab3559](String), 1(Integer), GET(String), 11(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 11:48:47.687 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 13:22:24.691 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 13:22:24.692 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/verifyCode.jpg(String), [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2a915282, org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1291752e](String), 1(Integer), GET(String), 11(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 13:22:24.698 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 13:22:34.206 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 13:22:34.207 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 13:22:34.210 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 13:23:18.211 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 13:23:18.212 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 13:23:18.213 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 13:23:21.287 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 13:23:21.290 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 13:23:21.294 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 13:23:21.914 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 13:23:21.915 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 13:23:21.917 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 13:23:22.414 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 13:23:22.415 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 13:23:22.416 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 13:23:22.911 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 13:23:22.912 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 13:23:22.913 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 14:18:12.054 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 14:18:17.511 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 14:18:17.512 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 14:18:17.513 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 14:19:01.398 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 14:19:01.412 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 14:19:01.426 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 15:06:48.404 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 15:06:52.459 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 15:06:52.460 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 15:06:52.460 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 17:45:09.686 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 17:45:13.408 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 17:45:13.409 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 17:45:13.410 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 17:46:10.337 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 17:46:10.350 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 17:46:10.367 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 17:51:48.293 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 17:51:52.446 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 17:51:52.447 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 17:51:52.447 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 17:54:04.024 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_user ( ip, username, password, email ) VALUES ( ?, ?, ?, ? ) 
2020-04-21 17:54:04.039 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.insert.debug:143 -==> Parameters: 127.0.0.1(String), admin(String), 123456(String), 2933575030@qq.com(String)
2020-04-21 17:54:04.047 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 17:54:04.071 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 17:54:04.073 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/register(String), [SysUser(id=null, ip=null, username=admin, password=123456, avatar=null, salt=null, email=null, tel=null, birthday=null, age=null, gender=null, userCreateTime=null, isEnable=null, isDeleted=null)](String), 1(Integer), POST(String), 262(Long), {"code":20000,"msg":"注册成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 17:54:04.078 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 17:55:35.780 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 17:55:39.617 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 17:55:39.618 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 17:55:39.618 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 17:55:53.144 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_user ( ip, username, password, email ) VALUES ( ?, ?, ?, ? ) 
2020-04-21 17:55:53.159 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.insert.debug:143 -==> Parameters: 127.0.0.1(String), admin(String), $2a$10$ynofDKIPZ3/Qrq6Z/Zqpd.EBUpbMY5WovzIh8SzXFsS9ObBQqbQDO(String), 2933575030@qq.com(String)
2020-04-21 17:55:53.164 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 17:55:53.184 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 17:55:53.186 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /user/register(String), [SysUser(id=null, ip=null, username=admin, password=123456, avatar=null, salt=null, email=null, tel=null, birthday=null, age=null, gender=null, userCreateTime=null, isEnable=null, isDeleted=null)](String), 1(Integer), POST(String), 552(Long), {"code":20000,"msg":"注册成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 17:55:53.190 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 17:56:13.216 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 17:56:13.217 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 17:56:13.224 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 17:59:18.664 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 17:59:22.788 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 17:59:22.788 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 17:59:22.789 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 18:02:00.512 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 18:02:04.783 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 18:02:04.783 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 18:02:04.784 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 18:08:15.282 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 18:08:19.385 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 18:08:19.385 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 18:08:19.386 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 18:08:49.173 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 18:08:49.188 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 18:08:49.198 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 18:16:16.901 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 18:16:20.423 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 18:16:20.423 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 18:16:20.424 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 18:17:10.994 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 18:17:14.835 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 18:17:14.836 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 18:17:14.837 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 18:17:40.997 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 18:17:41.010 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 18:17:41.021 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 18:42:19.614 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 18:42:23.424 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 18:42:23.424 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 18:42:23.425 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 18:42:46.621 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 18:42:46.635 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 18:42:46.649 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 19:24:36.826 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:24:40.731 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 19:24:40.732 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 19:24:40.732 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 19:25:06.372 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 19:25:06.385 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 19:25:06.395 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 19:29:10.355 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:29:14.992 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 19:29:14.993 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 19:29:14.993 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 19:29:26.347 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select username,password from sys_user where username=? 
2020-04-21 19:29:26.361 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 19:32:34.077 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:32:37.847 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 19:32:37.847 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 19:32:37.848 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 19:32:49.480 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 19:32:49.494 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 19:40:28.161 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:42:24.880 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:44:30.759 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:47:28.353 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:49:58.175 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 19:58:51.075 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:01:18.115 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:01:33.787 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:02:37.881 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:05:09.834 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:05:14.731 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:05:14.731 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:05:14.731 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:05:22.990 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 20:05:23.005 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 20:05:23.032 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 20:05:23.034 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 20:05:23.035 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 20:05:23.046 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 1
2020-04-21 20:06:32.482 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:06:36.822 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:06:36.823 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:06:36.824 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:09:23.182 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:09:29.025 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:09:29.026 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:09:29.027 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:11:07.581 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 20:11:07.595 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -==> Parameters: admin(String)
2020-04-21 20:11:07.607 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getUserByName.debug:143 -<==      Total: 1
2020-04-21 20:11:07.609 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 20:11:07.610 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 20:11:07.612 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 20:12:29.423 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:12:33.156 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:12:33.157 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:12:33.157 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:34:18.060 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:34:21.799 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:34:21.799 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:34:21.800 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:34:36.080 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 20:34:36.095 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 20:34:36.107 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 20:34:36.110 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 20:34:36.110 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 20:34:36.113 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 20:37:17.828 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:37:21.469 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:37:21.469 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:37:21.470 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:37:30.256 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 20:37:30.283 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 20:37:30.299 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 20:37:30.302 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 20:37:30.303 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 20:37:30.305 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 20:44:43.571 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:44:48.101 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:44:48.102 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:44:48.102 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:45:01.293 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 20:45:01.308 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 20:45:01.318 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 20:45:01.321 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 20:45:01.322 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 20:45:01.325 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 20:52:27.890 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:52:31.935 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:52:31.935 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:52:31.936 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 20:58:28.155 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 20:58:32.439 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 20:58:32.440 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 20:58:32.441 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 21:01:08.374 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 21:01:12.895 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 21:01:12.896 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 21:01:12.896 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 21:01:59.594 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:01:59.608 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:01:59.619 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:01:59.622 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:01:59.623 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:01:59.626 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:02:36.628 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 21:02:41.279 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 21:02:41.280 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 21:02:41.281 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 21:03:29.584 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:03:29.600 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:03:29.611 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:03:29.614 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:03:29.615 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:03:29.618 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:03:29.627 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:03:29.628 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:03:29.630 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:03:29.631 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:03:29.632 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:03:29.633 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:04:22.851 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:04:22.852 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:04:22.853 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:04:22.855 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:04:22.856 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:04:22.858 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:04:22.862 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:04:22.863 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:04:22.865 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:04:22.868 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:04:22.869 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:04:22.871 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:04:23.003 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==>  Preparing: SELECT COUNT(1) FROM tag WHERE is_deleted = 0 
2020-04-21 21:04:23.004 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==> Parameters: 
2020-04-21 21:04:23.011 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==>  Preparing: select id,name,is_enable from tag WHERE is_deleted = 0 LIMIT ?,? 
2020-04-21 21:04:23.012 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==> Parameters: 0(Long), 10(Long)
2020-04-21 21:04:23.016 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.017 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 1(Integer)
2020-04-21 21:04:23.022 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.024 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.024 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 2(Integer)
2020-04-21 21:04:23.025 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.028 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.029 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 3(Integer)
2020-04-21 21:04:23.030 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.032 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.033 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 4(Integer)
2020-04-21 21:04:23.035 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.037 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.038 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 5(Integer)
2020-04-21 21:04:23.039 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.041 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.042 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 6(Integer)
2020-04-21 21:04:23.044 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.047 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:04:23.048 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 7(Integer)
2020-04-21 21:04:23.049 DEBUG [http-nio-8088-exec-4]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:04:23.051 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -<==      Total: 7
2020-04-21 21:04:23.087 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 21:04:23.089 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /tag/list(String), [PageUtils(totalCount=0, pageSize=10, totalPage=0, currPage=1, list=null, params={}, sortColumn=null)](String), 1(Integer), POST(String), 134(Long), {"code":20000,"data":{"currPage":1,"list":[{"articleCount":"3","id":1,"isEnable":true,"name":"spring"},{"articleCount":"4","id":2,"isEnable":true,"name":"java"},{"articleCount":"2","id":3,"isEnable":true,"name":"mysql"},{"articleCount":"0","id":4,"isEnable":true,"name":"javascript"},{"articleCount":"0","id":5,"isEnable":true,"name":"Python"},{"articleCount":"0","id":6,"isEnable":true,"name":"vue"},{"articleCount":"0","id":7,"isEnable":true,"name":"面试"}],"pageSize":10,"params":{},"totalCount":7,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 21:04:23.093 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 21:05:45.287 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:05:45.288 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:05:45.290 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:05:45.292 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:05:45.292 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:05:45.293 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:05:45.296 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:05:45.297 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:05:45.298 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:05:45.300 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:05:45.301 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:05:45.302 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:05:45.321 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.ArticleMapper.getByPage.debug:143 -==>  Preparing: SELECT COUNT(1) FROM article WHERE is_deleted = 0 
2020-04-21 21:05:45.323 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.ArticleMapper.getByPage.debug:143 -==> Parameters: 
2020-04-21 21:05:45.325 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.ArticleMapper.getByPage.debug:143 -==>  Preparing: SELECT id,author,title,content,summary,cover, views,comment_count,like_count,is_top, is_recommend,create_time,update_time,is_enable FROM article WHERE is_deleted=0 LIMIT ?,? 
2020-04-21 21:05:45.326 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.ArticleMapper.getByPage.debug:143 -==> Parameters: 0(Long), 10(Long)
2020-04-21 21:05:45.330 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.331 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1(String)
2020-04-21 21:05:45.334 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.336 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.337 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1(String)
2020-04-21 21:05:45.339 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 2
2020-04-21 21:05:45.341 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.342 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1251725190564519937(String)
2020-04-21 21:05:45.343 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.344 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.345 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1251725190564519937(String)
2020-04-21 21:05:45.347 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.348 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.349 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1251725884101074946(String)
2020-04-21 21:05:45.351 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.353 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.354 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1251725884101074946(String)
2020-04-21 21:05:45.355 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.357 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.358 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1251750614375907330(String)
2020-04-21 21:05:45.359 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.360 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.361 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1251750614375907330(String)
2020-04-21 21:05:45.363 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.365 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.365 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1251752142763507713(String)
2020-04-21 21:05:45.367 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.368 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.370 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1251752142763507713(String)
2020-04-21 21:05:45.371 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.374 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.374 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1251776651612700674(String)
2020-04-21 21:05:45.375 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.377 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.378 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1251776651612700674(String)
2020-04-21 21:05:45.379 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.381 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.382 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 1251780392676016129(String)
2020-04-21 21:05:45.383 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.386 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.387 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 1251780392676016129(String)
2020-04-21 21:05:45.388 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.390 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.391 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 3(String)
2020-04-21 21:05:45.393 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.395 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.396 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 3(String)
2020-04-21 21:05:45.397 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.399 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====>  Preparing: select c.id,c.category_name from category c left join article_category ac on c.id=ac.category_id WHERE ac.article_id = ? AND c.is_enable = 1 AND c.is_deleted = 0 
2020-04-21 21:05:45.399 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -====> Parameters: 4(String)
2020-04-21 21:05:45.401 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.CategoryMapper.getByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.402 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====>  Preparing: select t.id,t.name from tag t left join article_tag att on t.id=att.tag_id WHERE att.article_id = ? AND t.is_enable = 1 AND t.is_deleted = 0 
2020-04-21 21:05:45.403 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -====> Parameters: 4(String)
2020-04-21 21:05:45.404 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.TagMapper.listByArticleId.debug:143 -<====      Total: 1
2020-04-21 21:05:45.406 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.ArticleMapper.getByPage.debug:143 -<==      Total: 9
2020-04-21 21:05:45.436 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 21:05:45.439 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /article/list(String), [PageUtils(totalCount=0, pageSize=10, totalPage=0, currPage=1, list=null, params={}, sortColumn=null)](String), 1(Integer), POST(String), 102(Long), {"code":20000,"data":{"currPage":1,"list":[{"author":"1","category":{"categoryName":"数据库","id":3},"commentCount":23,"content":"1","cover":"http://cdn.codexing.cn/03a13adb79244931998748430a874b77.jpg","createTime":"2020-03-23 15:55:15","id":"1","isEnable":true,"isRecommend":false,"isTop":false,"likeCount":34,"summary":"1","tagList":[{"id":1,"name":"spring"},{"id":2,"name":"java"}],"title":"mybatis plus 乐观锁测试时间","updateTime":"2020-04-20 15:24:06","views":138},{"author":"现在才VS真的非常","category":{"categoryName":"微服务","id":2},"commentCount":0,"content":"<p>阿三打撒</p>","createTime":"2020-04-19 12:11:56","id":"1251725190564519937","isEnable":true,"isRecommend":false,"isTop":false,"likeCount":0,"summary":"f 阿三打撒","tagList":[{"id":2,"name":"java"}],"title":"阿道夫啊实打实的","updateTime":"2020-04-20 12:03:53","views":1},{"author":"sdf","category":{"categoryName":"其他","id":4},"commentCount":0,"content":"<p>sdfsdfsdf</p>","createTime":"2020-04-19 12:14:41","id":"1251725884101074946","isEnable":true,"isRecommend":false,"isTop":false,"likeCount":0,"summary":"sdf","tagList":[{"id":1,"name":"spring"}],"title":"sdf","updateTime":"2020-04-20 15:28:47","views":5},{"author":"213123","category":{"categoryName":"微服务","id":2},"commentCount":0,"content":"<p>tup</p>","cover":"http://cdn.codexing.cn/4141087202ef47a9a75cf89fe417c117.png","createTime":"2020-04-19 13:52:57","id":"1251750614375907330","isEnable":true,"isRecommend":false,"isTop":false,"likeCount":0,"summary":"123123123","tagList":[{"id":1,"name":"spring"}],"title":"123123123","updateTime":"2020-04-19 20:15:29","views":5},{"author":"_江南一点雨","category":{"categoryName":"测试","id":1},"commentCount":0,"content":"```\n代码块\n```\nasdasd","createTime":"2020-04-19 13:59:01","id":"1251752142763507713","isEnable":false,"isRecommend":false,"isTop":false,"likeCount":123,"summary":"有小伙伴问松哥这个问题，他在上海某公司，在离职了几个月后，前公司的领导联系到他，希望他能够返聘回去，他很纠结要不要回去？","tagList":[{"id":2,"name":"java"}],"title":"离职半年了，老东家又发 offer，回不回？","updateTime":"2020-04-19 21:29:41","views":15},{"author":"xing","category":{"categoryName":"微服务","id":2},"commentCount":0,"content":" ```java\n@Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        converters.removeIf(c -> c instanceof MappingJackson2HttpMessageConverter);\n        converters.add(new MappingJackson2HttpMessageConverter(jacksonObjectMapperCustomization()));\n    }\n\n    private static final String DATE_FORMAT = \"yyyy-MM-dd\";\n    private static final String DATE_TIME_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n\n    @Bean\n    public ObjectMapper jacksonObjectMapperCustomization() {\n\n        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder()\n                .simpleDateFormat(DATE_TIME_FORMAT)\n                .serializers(new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(DATE_FORMAT)))\n                .serializers(new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT)));\n\n\n        return builder.build();\n    }\n\n@Override\n    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {\n        converters.removeIf(c -> c instanceof MappingJackson2HttpMessageConverter);\n        converters.add(new MappingJackson2HttpMessageConverter(jacksonObjectMapperCustomization()));\n    }\n\n    private static final String DATE_FORMAT = \"yyyy-MM-dd\";\n    private static final String DATE_TIME_FORMAT = \"yyyy-MM-dd HH:mm:ss\";\n\n    @Bean\n    public ObjectMapper jacksonObjectMapperCustomization() {\n\n        Jackson2ObjectMapperBuilder builder = new Jackson2ObjectMapperBuilder()\n                .simpleDateFormat(DATE_TIME_FORMAT)\n                .serializers(new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(DATE_FORMAT)))\n                .serializers(new LocalDateTimeSerializer(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT)));\n\n\n        return builder.build();\n    }\n```\n","createTime":"2020-04-19 15:36:25","id":"1251776651612700674","isEnable":true,"isRecommend":false,"isTop":false,"likeCount":0,"summary":"jackson","tagList":[{"id":2,"name":"java"}],"title":"springboot jackson","updateTime":"2020-04-20 15:22:20","views":11},{"author":"xing","category":{"categoryName":"数据库","id":3},"commentCount":0,"content":"### 建表\n\n- 学生表\n\n```mysql\nCREATE TABLE `Student`(\n`s_id` VARCHAR(20),\n`s_name` VARCHAR(20) NOT NULL DEFAULT '',\n`s_birth` VARCHAR(20) NOT NULL DEFAULT '',\n`s_sex` VARCHAR(10) NOT NULL DEFAULT '',\nPRIMARY KEY(`s_id`)\n);\n```\n\n- 课程表\n\n```mysql\nCREATE TABLE `Course`(\n`c_id`  VARCHAR(20),\n`c_name` VARCHAR(20) NOT NULL DEFAULT '',\n`t_id` VARCHAR(20) NOT NULL,\nPRIMARY KEY(`c_id`)\n);\n```\n\n- 教师表\n\n```mysql\nCREATE TABLE `Teacher`(\n`t_id` VARCHAR(20),\n`t_name` VARCHAR(20) NOT NULL DEFAULT '',\nPRIMARY KEY(`t_id`)\n);\n```\n\n- 成绩表\n\n```mysql\nCREATE TABLE `Score`(\n`s_id` VARCHAR(20),\n`c_id`  VARCHAR(20),\n`s_score` INT(3),\nPRIMARY KEY(`s_id`,`c_id`)\n);\n```\n\n- 插入学生表测试数据\n\n```mysql\ninsert into Student values('01' , '赵雷' , '1990-01-01' , '男');\ninsert into Student values('02' , '钱电' , '1990-12-21' , '男');\ninsert into Student values('03' , '孙风' , '1990-05-20' , '男');\ninsert into Student values('04' , '李云' , '1990-08-06' , '男');\ninsert into Student values('05' , '周梅' , '1991-12-01' , '女');\ninsert into Student values('06' , '吴兰' , '1992-03-01' , '女');\ninsert into Student values('07' , '郑竹' , '1989-07-01' , '女');\ninsert into Student values('08' , '王菊' , '1990-01-20' , '女');\n```\n\n- 课程表测试数据\n\n```mysql\ninsert into Course values('01' , '语文' , '02');\ninsert into Course values('02' , '数学' , '01');\ninsert into Course values('03' , '英语' , '03');\n```\n\n- 教师表测试数据\n\n```mysql\ninsert into Teacher values('01' , '张三');\ninsert into Teacher values('02' , '李四');\ninsert into Teacher values('03' , '王五');\n```\n\n- 成绩表测试数据\n\n```mysql\ninsert into Score values('01' , '01' , 80);\ninsert into Score values('01' , '02' , 90);\ninsert into Score values('01' , '03' , 99);\ninsert into Score values('02' , '01' , 70);\ninsert into Score values('02' , '02' , 60);\ninsert into Score values('02' , '03' , 80);\ninsert into Score values('03' , '01' , 80);\ninsert into Score values('03' , '02' , 80);\ninsert into Score values('03' , '03' , 80);\ninsert into Score values('04' , '01' , 50);\ninsert into Score values('04' , '02' , 30);\ninsert into Score values('04' , '03' , 20);\ninsert into Score values('05' , '01' , 76);\ninsert into Score values('05' , '02' , 87);\ninsert into Score values('06' , '01' , 31);\ninsert into Score values('06' , '03' , 34);\ninsert into Score values('07' , '02' , 89);\ninsert into Score values('07' , '03' , 98);\n```\n\n### 练习题和sql语句\n\n1. 查询\"01\"课程比\"02\"课程成绩高的学生的信息及课程分数\n\n```mysql\nselect a.*,b.s_score as 01_score,c.s_score as 02_score from student   a,score b,score c \nwhere a.s_id=b.s_id \nand a.s_id=c.s_id \nand b.c_id='01' \nand c.c_id='02' \nand b.s_score>c.s_score\n```\n\n2. 查询\"01\"课程比\"02\"课程成绩低的学生的信息及课程分数\n\n```mysql\nselect a.* ,b.s_score as 01_score,c.s_score as 02_score from \nstudent a left join score b on a.s_id=b.s_id and b.c_id='01' or b.c_id=NULL \njoin score c on a.s_id=c.s_id and c.c_id='02' where b.s_score<c.s_score\n```\n\n3. 查询平均成绩大于等于60分的同学的学生编号和学生姓名和平均成绩\n\n```mysql\nselect b.s_id,b.s_name,ROUND(AVG(a.s_score),2) as avg_score from \nstudent b \njoin score a on b.s_id = a.s_id\nGROUP BY b.s_id,b.s_name HAVING avg_score >=60;\n```\n\n4. 查询平均成绩小于60分的同学的学生编号和学生姓名和平均成绩(包括有成绩的和无成绩的)\n\n```mysql\nselect b.s_id,b.s_name,ROUND(AVG(a.s_score),2) as avg_score from \nstudent b \nleft join score a on b.s_id = a.s_id\nGROUP BY b.s_id,b.s_name HAVING avg_score <60\nunion\nselect a.s_id,a.s_name,0 as avg_score from \nstudent a \nwhere a.s_id not in (\nselect distinct s_id from score);\n```\n\n5. 查询所有同学的学生编号、学生姓名、选课总数、所有课程的总成绩\n\n```mysql\nselect a.s_id,a.s_name,count(b.c_id) as sum_course,sum(b.s_score) as sum_score from \nstudent a \nleft join score b on a.s_id=b.s_id\nGROUP BY a.s_id,a.s_name;\n```\n\n6. 查询\"李\"姓老师的数量 \n\n```mysql\nselect count(t_id) from teacher where t_name like '李%';\n```\n\n7. 查询学过\"张三\"老师授课的同学的信息 \n\n```mysql\nselect a.* from \nstudent a \njoin score b on a.s_id=b.s_id where b.c_id in(\nselect c_id from course where t_id =(\nselect t_id from teacher where t_name = '张三'));\n```\n\n\n\n8. 查询没学过\"张三\"老师授课的同学的信息 \n\n```mysql\nselect * from \n    student c \n    where c.s_id not in(\n        select a.s_id from student a join score b on a.s_id=b.s_id where b.c_id in(\n        select a.c_id from course a join teacher b on a.t_id = b.t_id where t_name ='张三'));\n```\n\n\n\n9. 查询学过编号为\"01\"并且也学过编号为\"02\"的课程的同学的信息\n\n```mysql\nselect a.* from \nstudent a,score b,score c \nwhere a.s_id = b.s_id  and a.s_id = c.s_id and b.c_id='01' and c.c_id='02';\n```\n\n10. 查询学过编号为\"01\"但是没有学过编号为\"02\"的课程的同学的信息\n\n```mysql\nselect a.* from \nstudent a \nwhere a.s_id in (select s_id from score where c_id='01' ) and a.s_id not in(select s_id from score where c_id='02')\n```\n\n11. 查询没有学全所有课程的同学的信息 \n\n```mysql\n--@wendiepei的写法\nselect s.* from student s \nleft join Score s1 on s1.s_id=s.s_id\ngroup by s.s_id having count(s1.c_id)<(select count(*) from course)\t\n--@k1051785839的写法\nselect *\nfrom student\nwhere s_id not in(\nselect s_id from score t1  \ngroup by s_id having count(*) =(select count(distinct c_id)  from course)) \n```\n\n12. 查询至少有一门课与学号为\"01\"的同学所学相同的同学的信息 \n\n```mysql\nselect * from student where s_id in(\nselect distinct a.s_id from score a where a.c_id in(select a.c_id from score a where a.s_id='01')\n);\n```\n\n13. 查询和\"01\"号的同学学习的课程完全相同的其他同学的信息 \n\n```mysql\n--@ouyang_1993的写法\nSELECT\n Student.*\nFROM\n Student\nWHERE\n s_id IN (SELECT s_id FROM Score GROUP BY s_id HAVING COUNT(s_id) = (\n    #下面的语句是找到'01'同学学习的课程数\n    SELECT COUNT(c_id) FROM Score WHERE s_id = '01'\n   )\n )\nAND s_id NOT IN (\n #下面的语句是找到学过‘01’同学没学过的课程，有哪些同学。并排除他们\n SELECT s_id FROM Score\n WHERE c_id IN(\n   #下面的语句是找到‘01’同学没学过的课程\n   SELECT DISTINCT c_id FROM Score\n   WHERE c_id NOT IN (\n     #下面的语句是找出‘01’同学学习的课程\n     SELECT c_id FROM Score WHERE s_id = '01'\n    )\n  ) GROUP BY s_id\n) #下面的条件是排除01同学\nAND s_id NOT IN ('01')\n--@k1051785839的写法\nSELECT\n t3.*\nFROM\n (\n  SELECT\n   s_id,\n   group_concat(c_id ORDER BY c_id) group1\n  FROM\n   score\n  WHERE\n   s_id &lt;> '01'\n  GROUP BY\n   s_id\n ) t1\nINNER JOIN (\n SELECT\n  group_concat(c_id ORDER BY c_id) group2\n FROM\n  score\n WHERE\n  s_id = '01'\n GROUP BY\n  s_id\n) t2 ON t1.group1 = t2.group2\nINNER JOIN student t3 ON t1.s_id = t3.s_id\n```\n\n14. 查询没学过\"张三\"老师讲授的任一门课程的学生姓名 \n\n```mysql\nselect a.s_name from student a where a.s_id not in (\nselect s_id from score where c_id = \n(select c_id from course where t_id =(\nselect t_id from teacher where t_name = '张三')));\n```\n\n15. 查询两门及其以上不及格课程的同学的学号，姓名及其平均成绩 \n\n```mysql\nselect a.s_id,a.s_name,ROUND(AVG(b.s_score)) from \nstudent a \nleft join score b on a.s_id = b.s_id\nwhere a.s_id in(\nselect s_id from score where s_score<60 GROUP BY  s_id having count(1)>=2)\nGROUP BY a.s_id,a.s_name\n```\n\n16. 检索\"01\"课程分数小于60，按分数降序排列的学生信息\n\n```mysql\nselect a.*,b.c_id,b.s_score from \nstudent a,score b \nwhere a.s_id = b.s_id and b.c_id='01' and b.s_score<60 ORDER BY b.s_score DESC;\n```\n\n17. 按平均成绩从高到低显示所有学生的所有课程的成绩以及平均成绩\n\n```mysql\nselect a.s_id,(select s_score from score where s_id=a.s_id and c_id='01') as 语文,\n(select s_score from score where s_id=a.s_id and c_id='02') as 数学,\n(select s_score from score where s_id=a.s_id and c_id='03') as 英语,\nround(avg(s_score),2) as 平均分 from score a  GROUP BY a.s_id ORDER BY 平均分 DESC;\n--@喝完这杯还有一箱的写法\nSELECT a.s_id,MAX(CASE a.c_id WHEN '01' THEN a.s_score END ) 语文, \nMAX(CASE a.c_id WHEN '02' THEN a.s_score END ) 数学, \nMAX(CASE a.c_id WHEN '03' THEN a.s_score END ) 英语, \navg(a.s_score),b.s_name FROM Score a JOIN Student b ON a.s_id=b.s_id GROUP BY a.s_id ORDER BY 5 DESC\n```\n\n18. 查询各科成绩最高分、最低分和平均分：以如下形式显示：课程ID，课程name，最高分，最低分，平均分，及格率，中等率，优良率，优秀率\n    --及格为>=60，中等为：70-80，优良为：80-90，优秀为：>=90\n\n```mysql\nselect a.c_id,b.c_name,MAX(s_score),MIN(s_score),ROUND(AVG(s_score),2),\nROUND(100*(SUM(case when a.s_score>=60 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 及格率,\nROUND(100*(SUM(case when a.s_score>=70 and a.s_score<=80 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 中等率,\nROUND(100*(SUM(case when a.s_score>=80 and a.s_score<=90 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 优良率,\nROUND(100*(SUM(case when a.s_score>=90 then 1 else 0 end)/SUM(case when a.s_score then 1 else 0 end)),2) as 优秀率\nfrom score a left join course b on a.c_id = b.c_id GROUP BY a.c_id,b.c_name\n```\n\n19. 按各科成绩进行排序，并显示排名\n\n```mysql\n-- mysql没有rank函数\nselect a.s_id,a.c_id,\n        @i:=@i +1 as i保留排名,\n        @k:=(case when @score=a.s_score then @k else @i end) as rank不保留排名,\n        @score:=a.s_score as score\n    from (\n        select s_id,c_id,s_score from score GROUP BY s_id,c_id,s_score ORDER BY s_score DESC\n    )a,(select @k:=0,@i:=0,@score:=0)s\n--@k1051785839的写法\n(select * from (select \n                t1.c_id,\n                t1.s_score,\n                (select count(distinct t2.s_score) from score t2 where t2.s_score>=t1.s_score and t2.c_id='01') rank\n                FROM score t1 where t1.c_id='01'\n                order by t1.s_score desc) t1)\nunion\n(select * from (select \n                t1.c_id,\n                t1.s_score,\n                (select count(distinct t2.s_score) from score t2 where t2.s_score>=t1.s_score and t2.c_id='02') rank\n                FROM score t1 where t1.c_id='02'\n                order by t1.s_score desc) t2)\nunion\n(select * from (select \n                t1.c_id,\n                t1.s_score,\n                (select count(distinct t2.s_score) from score t2 where t2.s_score>=t1.s_score and t2.c_id='03') rank\n                FROM score t1 where t1.c_id='03'\n                order by t1.s_score desc) t3)\n```\n\n20. 查询学生的总成绩并进行排名\n\n```mysql\nselect a.s_id,\n@i:=@i+1 as i,\n@k:=(case when @score=a.sum_score then @k else @i end) as rank,\n@score:=a.sum_score as score\nfrom (select s_id,SUM(s_score) as sum_score from score GROUP BY s_id ORDER BY sum_score DESC)a,\n(select @k:=0,@i:=0,@score:=0)s\n```\n\n21. 查询不同老师所教不同课程平均分从高到低显示 \n\n```mysql\nselect a.t_id,c.t_name,a.c_id,ROUND(avg(s_score),2) as avg_score from course a\nleft join score b on a.c_id=b.c_id \nleft join teacher c on a.t_id=c.t_id\nGROUP BY a.c_id,a.t_id,c.t_name ORDER BY avg_score DESC;\n```\n\n22. 查询所有课程的成绩第2名到第3名的学生信息及该课程成绩\n\n```mysql\nselect d.*,c.排名,c.s_score,c.c_id from (\n                select a.s_id,a.s_score,a.c_id,@i:=@i+1 as 排名 from score a,(select @i:=0)s where a.c_id='01'  \nORDER BY a.s_score DESC  \n            )c\n            left join student d on c.s_id=d.s_id\n            where 排名 BETWEEN 2 AND 3\n            UNION\n            select d.*,c.排名,c.s_score,c.c_id from (\n                select a.s_id,a.s_score,a.c_id,@j:=@j+1 as 排名 from score a,(select @j:=0)s where a.c_id='02'  \nORDER BY a.s_score DESC\n            )c\n            left join student d on c.s_id=d.s_id\n            where 排名 BETWEEN 2 AND 3\n            UNION\n            select d.*,c.排名,c.s_score,c.c_id from (\n                select a.s_id,a.s_score,a.c_id,@k:=@k+1 as 排名 from score a,(select @k:=0)s where a.c_id='03' \nORDER BY a.s_score DESC\n            )c\n            left join student d on c.s_id=d.s_id\n            where 排名 BETWEEN 2 AND 3;\n```\n\n23. 统计各科成绩各分数段人数：课程编号,课程名称,[100-85],[85-70],[70-60],[0-60]及所占百分比\n\n```mysql\nselect distinct f.c_name,a.c_id,b.`85-100`,b.百分比,c.`70-85`,c.百分比,d.`60-70`,d.百分比,e.`0-60`,e.百分比 from score a\nleft join (select c_id,SUM(case when s_score >85 and s_score <=100 then 1 else 0 end) as `85-100`,\nROUND(100*(SUM(case when s_score >85 and s_score <=100 then 1 else 0 end)/count(*)),2) as 百分比\nfrom score GROUP BY c_id)b on a.c_id=b.c_id\nleft join (select c_id,SUM(case when s_score >70 and s_score <=85 then 1 else 0 end) as `70-85`,\nROUND(100*(SUM(case when s_score >70 and s_score <=85 then 1 else 0 end)/count(*)),2) as 百分比\nfrom score GROUP BY c_id)c on a.c_id=c.c_id\nleft join (select c_id,SUM(case when s_score >60 and s_score <=70 then 1 else 0 end) as `60-70`,\nROUND(100*(SUM(case when s_score >60 and s_score <=70 then 1 else 0 end)/count(*)),2) as 百分比\nfrom score GROUP BY c_id)d on a.c_id=d.c_id\nleft join (select c_id,SUM(case when s_score >=0 and s_score <=60 then 1 else 0 end) as `0-60`,\nROUND(100*(SUM(case when s_score >=0 and s_score <=60 then 1 else 0 end)/count(*)),2) as 百分比\nfrom score GROUP BY c_id)e on a.c_id=e.c_id\nleft join course f on a.c_id = f.c_id\n```\n\n24. 查询学生平均成绩及其名次 \n\n```mysql\nselect a.s_id,\n@i:=@i+1 as '不保留空缺排名',\n@k:=(case when @avg_score=a.avg_s then @k else @i end) as '保留空缺排名',\n@avg_score:=avg_s as '平均分'\nfrom (select s_id,ROUND(AVG(s_score),2) as avg_s from score GROUP BY s_id ORDER BY avg_s DESC)a,(select @avg_score:=0,@i:=0,@k:=0)b;\n```\n\n25. 查询各科成绩前三名的记录\n\n```mysql\n-- 1.选出b表比a表成绩大的所有组\n-- 2.选出比当前id成绩大的 小于三个的\nselect a.s_id,a.c_id,a.s_score from score a \nleft join score b on a.c_id = b.c_id and a.s_score<b.s_score\ngroup by a.s_id,a.c_id,a.s_score HAVING COUNT(b.s_id)<3\nORDER BY a.c_id,a.s_score DESC\n```\n\n26. 查询每门课程被选修的学生数 \n\n```mysql\nselect c_id,count(s_id) from score a GROUP BY c_id\n```\n\n27. 查询出只有两门课程的全部学生的学号和姓名 \n\n```mysql\nselect s_id,s_name from student where s_id in(\nselect s_id from score GROUP BY s_id HAVING COUNT(c_id)=2);\n```\n\n28. 查询男生、女生人数 \n\n```mysql\nselect s_sex,COUNT(s_sex) as 人数  from student GROUP BY s_sex\n```\n\n29. 查询名字中含有\"风\"字的学生信息\n\n```mysql\nselect * from student where s_name like '%风%';\n```\n\n30. 查询同名同性学生名单，并统计同名人数 \t\t\n\n```mysql\nselect a.s_name,a.s_sex,count(*) from student a  JOIN \nstudent b on a.s_id !=b.s_id and a.s_name = b.s_name and a.s_sex = b.s_sex\nGROUP BY a.s_name,a.s_sex\n```\n\n31. 查询1990年出生的学生名单\n\n```mysql\nselect s_name from student where s_birth like '1990%'\n```\n\n32. 查询每门课程的平均成绩，结果按平均成绩降序排列，平均成绩相同时，按课程编号升序排列 \n\n```mysql\nselect c_id,ROUND(AVG(s_score),2) as avg_score from score GROUP BY c_id ORDER BY avg_score DESC,c_id ASC\n```\n\n33. 查询平均成绩大于等于85的所有学生的学号、姓名和平均成绩 \n\n```mysql\nselect a.s_id,b.s_name,ROUND(avg(a.s_score),2) as avg_score from score a\nleft join student b on a.s_id=b.s_id GROUP BY s_id HAVING avg_score>=85\n```\n\n34. 查询课程名称为\"数学\"，且分数低于60的学生姓名和分数 \t\n\n```mysql\nselect a.s_name,b.s_score from score b join student a on a.s_id=b.s_id where b.c_id=(\nselect c_id from course where c_name ='数学') and b.s_score<60\n```\n\n35. 查询所有学生的课程及分数情况；\n\n```mysql\nselect a.s_id,a.s_name,\nSUM(case c.c_name when '语文' then b.s_score else 0 end) as '语文',\nSUM(case c.c_name when '数学' then b.s_score else 0 end) as '数学',\nSUM(case c.c_name when '英语' then b.s_score else 0 end) as '英语',\nSUM(b.s_score) as  '总分'\nfrom student a left join score b on a.s_id = b.s_id \nleft join course c on b.c_id = c.c_id \nGROUP BY a.s_id,a.s_name\n```\n\n36. 查询任何一门课程成绩在70分以上的姓名、课程名称和分数； \n\n```mysql\nselect a.s_name,b.c_name,c.s_score from course b left join score c on b.c_id = c.c_id\nleft join student a on a.s_id=c.s_id where c.s_score>=70\n```\n\n37. 查询不及格的课程\n\n```mysql\nselect a.s_id,a.c_id,b.c_name,a.s_score from score a left join course b on a.c_id = b.c_id\nwhere a.s_score<60 \n```\n\n38. 查询课程编号为01且课程成绩在80分以上的学生的学号和姓名； \n\n```mysql\nselect a.s_id,b.s_name from score a LEFT JOIN student b on a.s_id = b.s_id\nwhere a.c_id = '01'and a.s_score>80\n```\n\n39. 求每门课程的学生人数 \n\n```mysql\nselect count(*) from score GROUP BY c_id;\n```\n\n40. 查询选修\"张三\"老师所授课程的学生中，成绩最高的学生信息及其成绩\n\n```mysql\n-- 查询老师id\t\nselect c_id from course c,teacher d where c.t_id=d.t_id and d.t_name='张三'\n-- 查询最高分（可能有相同分数）\nselect MAX(s_score) from score where c_id='02'\n-- 查询信息\nselect a.*,b.s_score,b.c_id,c.c_name from student a\nLEFT JOIN score b on a.s_id = b.s_id\nLEFT JOIN course c on b.c_id=c.c_id\nwhere b.c_id =(select c_id from course c,teacher d where c.t_id=d.t_id and d.t_name='张三')\nand b.s_score in (select MAX(s_score) from score where c_id='02')\n```\n\n41. 查询不同课程成绩相同的学生的学生编号、课程编号、学生成绩 \n\n```mysql\nselect DISTINCT b.s_id,b.c_id,b.s_score from score a,score b where a.c_id != b.c_id and a.s_score = b.s_score\n```\n\n42. 查询每门功成绩最好的前两名 \n\n```mysql\nselect a.s_id,a.c_id,a.s_score from score a\nwhere (select COUNT(1) from score b where b.c_id=a.c_id and b.s_score>=a.s_score)<=2 ORDER BY a.c_id\n```\n\n43. 统计每门课程的学生选修人数（超过5人的课程才统计）。要求输出课程号和选修人数，查询结果按人数降序排列，若人数相同，按课程号升序排列  \n\n```mysql\nselect c_id,count(*) as total from score GROUP BY c_id HAVING total>5 ORDER BY total,c_id ASC\n```\n\n44. 检索至少选修两门课程的学生学号 \n\n```mysql\nselect s_id,count(*) as sel from score GROUP BY s_id HAVING sel>=2\n```\n\n45. 查询选修了全部课程的学生信息 \n\n```mysql\nselect * from student where s_id in(\t\t\nselect s_id from score GROUP BY s_id HAVING count(*)=(select count(*) from course))\n```\n\n46. 查询各学生的年龄\n\n```mysql\n# 按照出生日期来算，当前月日 < 出生年月的月日则，年龄减一\nselect s_birth,(DATE_FORMAT(NOW(),'%Y')-DATE_FORMAT(s_birth,'%Y') - \n(case when DATE_FORMAT(NOW(),'%m%d')>DATE_FORMAT(s_birth,'%m%d') then 0 else 1 end)) as age\nfrom student;\n```\n\n47. 查询本周过生日的学生\n\n```mysql\nselect * from student where WEEK(DATE_FORMAT(NOW(),'%Y%m%d'))=WEEK(s_birth)\nselect * from student where YEARWEEK(s_birth)=YEARWEEK(DATE_FORMAT(NOW(),'%Y%m%d'))\n\t\nselect WEEK(DATE_FORMAT(NOW(),'%Y%m%d'))\n```\n\n48. 查询下周过生日的学生\n\n```mysql\nselect * from student where WEEK(DATE_FORMAT(NOW(),'%Y%m%d'))+1 =WEEK(s_birth)\n```\n\n49. 查询本月过生日的学生\n\n```mysql\nselect * from student where MONTH(DATE_FORMAT(NOW(),'%Y%m%d')) =MONTH(s_birth)\n```\n\n50. 查询下月过生日的学生\n\n```mysql\nselect * from student where MONTH(DATE_FORMAT(NOW(),'%Y%m%d'))+1 =MONTH(s_birth)\n```\n\n","createTime":"2020-04-19 15:51:17","id":"1251780392676016129","isEnable":true,"isRecommend":true,"isTop":false,"likeCount":0,"summary":"MySQL练习题","tagList":[{"id":3,"name":"mysql"}],"title":"mysql练习题","updateTime":"2020-04-19 21:31:59","views":38},{"author":"1","category":{"categoryName":"测试","id":1},"commentCount":0,"content":"3123123123","createTime":"2019-06-17 23:48:04","id":"3","isEnable":true,"isRecommend":false,"isTop":false,"likeCount":0,"summary":"123124312414","tagList":[{"id":2,"name":"java"}],"title":"岁的法国士大夫","updateTime":"2020-04-17 23:48:04","views":2},{"author":"3","category":{"categoryName":"其他","id":4},"commentCount":12,"content":"save","cover":"http://cdn.codexing.cn/03a13adb79244931998748430a874b77.jpg","createTime":"2019-06-14 12:21:50","id":"4","isEnable":true,"isRecommend":false,"isTop":true,"likeCount":12,"summary":"1","tagList":[{"id":3,"name":"mysql"}],"title":"这是置顶的文章哇","updateTime":"2020-04-20 15:19:20","views":1148}],"pageSize":10,"params":{},"totalCount":9,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 21:05:45.445 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 21:07:20.764 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:07:20.765 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:07:20.766 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:07:20.768 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:07:20.769 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:07:20.770 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:07:20.774 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:07:20.774 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 21:07:20.776 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 21:07:20.777 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 21:07:20.778 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 21:07:20.781 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 21:07:20.786 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==>  Preparing: SELECT COUNT(1) FROM tag WHERE is_deleted = 0 
2020-04-21 21:07:20.787 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==> Parameters: 
2020-04-21 21:07:20.789 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==>  Preparing: select id,name,is_enable from tag WHERE is_deleted = 0 LIMIT ?,? 
2020-04-21 21:07:20.790 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -==> Parameters: 0(Long), 10(Long)
2020-04-21 21:07:20.793 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.794 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 1(Integer)
2020-04-21 21:07:20.795 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.797 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.798 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 2(Integer)
2020-04-21 21:07:20.799 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.801 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.802 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 3(Integer)
2020-04-21 21:07:20.804 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.806 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.807 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 4(Integer)
2020-04-21 21:07:20.808 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.811 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.812 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 5(Integer)
2020-04-21 21:07:20.814 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.815 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.816 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 6(Integer)
2020-04-21 21:07:20.817 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.819 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====>  Preparing: select count(*) as articleCount from article a left join article_tag att on a.id=att.article_id WHERE att.tag_id = ? AND a.is_enable = 1 AND a.is_deleted = 0 
2020-04-21 21:07:20.819 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -====> Parameters: 7(Integer)
2020-04-21 21:07:20.820 DEBUG [http-nio-8088-exec-9]c.c.blog.mapper.ArticleMapper.getArticleCountByTagId.debug:143 -<====      Total: 1
2020-04-21 21:07:20.821 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.TagMapper.getByPage.debug:143 -<==      Total: 7
2020-04-21 21:07:20.825 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==>  Preparing: INSERT INTO sys_log ( url, params, status, method, used_time, result, ip ) VALUES ( ?, ?, ?, ?, ?, ?, ? ) 
2020-04-21 21:07:20.826 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -==> Parameters: /tag/list(String), [PageUtils(totalCount=0, pageSize=10, totalPage=0, currPage=1, list=null, params={}, sortColumn=null)](String), 1(Integer), POST(String), 40(Long), {"code":20000,"data":{"currPage":1,"list":[{"articleCount":"3","id":1,"isEnable":true,"name":"spring"},{"articleCount":"4","id":2,"isEnable":true,"name":"java"},{"articleCount":"2","id":3,"isEnable":true,"name":"mysql"},{"articleCount":"0","id":4,"isEnable":true,"name":"javascript"},{"articleCount":"0","id":5,"isEnable":true,"name":"Python"},{"articleCount":"0","id":6,"isEnable":true,"name":"vue"},{"articleCount":"0","id":7,"isEnable":true,"name":"面试"}],"pageSize":10,"params":{},"totalCount":7,"totalPage":1},"msg":"操作成功"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-21 21:07:20.828 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysLogMapper.insert.debug:143 -<==    Updates: 1
2020-04-21 21:17:16.697 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:17:16.697 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 21:17:16.702 DEBUG [http-nio-8088-exec-10]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 21:20:05.608 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:20:05.609 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 21:20:05.610 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 21:20:18.222 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:20:18.223 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 21:20:18.224 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 21:24:54.842 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:24:54.843 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 21:24:54.845 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 21:28:25.513 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:28:25.514 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 21:28:25.515 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 21:57:02.189 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 21:57:02.191 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 21:57:02.196 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:24:42.406 DEBUG [main]cn.codexing.blog.BlogApplication.logStarting:56 -Running with Spring Boot v2.2.5.RELEASE, Spring v5.2.4.RELEASE
2020-04-21 22:24:48.070 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'jwtAuthenticationFilter' configured for use
2020-04-21 22:24:48.070 DEBUG [main]cn.codexing.blog.common.filter.ImageCodeFilter.init:242 -Filter 'imageCodeFilter' configured for use
2020-04-21 22:24:48.071 DEBUG [main]cn.codexing.blog.common.filter.JwtAuthenticationFilter.init:242 -Filter 'authenticationTokenFilterBean' configured for use
2020-04-21 22:25:05.946 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:25:05.960 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:25:05.970 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:25:30.235 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:25:30.236 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:25:30.237 DEBUG [http-nio-8088-exec-2]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:25:50.537 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:25:50.538 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:25:50.539 DEBUG [http-nio-8088-exec-3]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:26:29.887 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:26:29.889 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:26:29.890 DEBUG [http-nio-8088-exec-4]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:26:35.848 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:26:35.849 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:26:35.850 DEBUG [http-nio-8088-exec-5]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:27:18.371 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:27:18.372 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:27:18.373 DEBUG [http-nio-8088-exec-6]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:28:17.689 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:28:17.690 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 22:28:17.694 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 22:28:17.696 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 22:28:17.698 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 22:28:17.703 DEBUG [http-nio-8088-exec-8]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
2020-04-21 22:28:41.565 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:28:41.566 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:28:41.567 DEBUG [http-nio-8088-exec-9]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:46:07.539 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:46:07.540 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: (String)
2020-04-21 22:46:07.541 DEBUG [http-nio-8088-exec-1]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 0
2020-04-21 22:47:03.907 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==>  Preparing: select id,username,password from sys_user where username=? 
2020-04-21 22:47:03.914 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -==> Parameters: admin(String)
2020-04-21 22:47:03.916 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysUserMapper.getByUsername.debug:143 -<==      Total: 1
2020-04-21 22:47:03.917 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==>  Preparing: SELECT r.id, r.NAME FROM sys_role r INNER JOIN sys_user_role sur ON sur.role_id = r.id WHERE sur.user_id = ? 
2020-04-21 22:47:03.918 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -==> Parameters: 1(Integer)
2020-04-21 22:47:03.919 DEBUG [http-nio-8088-exec-7]cn.codexing.blog.mapper.SysRoleMapper.listRoleByUserId.debug:143 -<==      Total: 2
